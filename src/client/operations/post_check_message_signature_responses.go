// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/skycoin/hardware-wallet-daemon/src/models"
)

// PostCheckMessageSignatureReader is a Reader for the PostCheckMessageSignature structure.
type PostCheckMessageSignatureReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCheckMessageSignatureReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostCheckMessageSignatureOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 409:
		result := NewPostCheckMessageSignatureConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostCheckMessageSignatureOK creates a PostCheckMessageSignatureOK with default headers values
func NewPostCheckMessageSignatureOK() *PostCheckMessageSignatureOK {
	return &PostCheckMessageSignatureOK{}
}

/*PostCheckMessageSignatureOK handles this case with default header values.

success
*/
type PostCheckMessageSignatureOK struct {
	Payload *models.HttpsuccessResponse
}

func (o *PostCheckMessageSignatureOK) Error() string {
	return fmt.Sprintf("[POST /checkMessageSignature][%d] postCheckMessageSignatureOK  %+v", 200, o.Payload)
}

func (o *PostCheckMessageSignatureOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HttpsuccessResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCheckMessageSignatureConflict creates a PostCheckMessageSignatureConflict with default headers values
func NewPostCheckMessageSignatureConflict() *PostCheckMessageSignatureConflict {
	return &PostCheckMessageSignatureConflict{}
}

/*PostCheckMessageSignatureConflict handles this case with default header values.

error
*/
type PostCheckMessageSignatureConflict struct {
	Payload *models.HTTPErrorResponse
}

func (o *PostCheckMessageSignatureConflict) Error() string {
	return fmt.Sprintf("[POST /checkMessageSignature][%d] postCheckMessageSignatureConflict  %+v", 409, o.Payload)
}

func (o *PostCheckMessageSignatureConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
