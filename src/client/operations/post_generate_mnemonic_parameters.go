// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/skycoin/hardware-wallet-daemon/src/models"
)

// NewPostGenerateMnemonicParams creates a new PostGenerateMnemonicParams object
// with the default values initialized.
func NewPostGenerateMnemonicParams() *PostGenerateMnemonicParams {
	var ()
	return &PostGenerateMnemonicParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostGenerateMnemonicParamsWithTimeout creates a new PostGenerateMnemonicParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostGenerateMnemonicParamsWithTimeout(timeout time.Duration) *PostGenerateMnemonicParams {
	var ()
	return &PostGenerateMnemonicParams{

		timeout: timeout,
	}
}

// NewPostGenerateMnemonicParamsWithContext creates a new PostGenerateMnemonicParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostGenerateMnemonicParamsWithContext(ctx context.Context) *PostGenerateMnemonicParams {
	var ()
	return &PostGenerateMnemonicParams{

		Context: ctx,
	}
}

// NewPostGenerateMnemonicParamsWithHTTPClient creates a new PostGenerateMnemonicParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostGenerateMnemonicParamsWithHTTPClient(client *http.Client) *PostGenerateMnemonicParams {
	var ()
	return &PostGenerateMnemonicParams{
		HTTPClient: client,
	}
}

/*PostGenerateMnemonicParams contains all the parameters to send to the API endpoint
for the post generate mnemonic operation typically these are written to a http.Request
*/
type PostGenerateMnemonicParams struct {

	/*GenerateMnemonicRequest
	  GenerateMnemonicRequest is request data for /api/v1/generate_mnemonic

	*/
	GenerateMnemonicRequest *models.GenerateMnemonicRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post generate mnemonic params
func (o *PostGenerateMnemonicParams) WithTimeout(timeout time.Duration) *PostGenerateMnemonicParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post generate mnemonic params
func (o *PostGenerateMnemonicParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post generate mnemonic params
func (o *PostGenerateMnemonicParams) WithContext(ctx context.Context) *PostGenerateMnemonicParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post generate mnemonic params
func (o *PostGenerateMnemonicParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post generate mnemonic params
func (o *PostGenerateMnemonicParams) WithHTTPClient(client *http.Client) *PostGenerateMnemonicParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post generate mnemonic params
func (o *PostGenerateMnemonicParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGenerateMnemonicRequest adds the generateMnemonicRequest to the post generate mnemonic params
func (o *PostGenerateMnemonicParams) WithGenerateMnemonicRequest(generateMnemonicRequest *models.GenerateMnemonicRequest) *PostGenerateMnemonicParams {
	o.SetGenerateMnemonicRequest(generateMnemonicRequest)
	return o
}

// SetGenerateMnemonicRequest adds the generateMnemonicRequest to the post generate mnemonic params
func (o *PostGenerateMnemonicParams) SetGenerateMnemonicRequest(generateMnemonicRequest *models.GenerateMnemonicRequest) {
	o.GenerateMnemonicRequest = generateMnemonicRequest
}

// WriteToRequest writes these params to a swagger request
func (o *PostGenerateMnemonicParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.GenerateMnemonicRequest != nil {
		if err := r.SetBodyParam(o.GenerateMnemonicRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
