// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/SkycoinProject/hardware-wallet-daemon/src/models"
)

// GetFeaturesReader is a Reader for the GetFeatures structure.
type GetFeaturesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFeaturesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFeaturesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetFeaturesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetFeaturesOK creates a GetFeaturesOK with default headers values
func NewGetFeaturesOK() *GetFeaturesOK {
	return &GetFeaturesOK{}
}

/*GetFeaturesOK handles this case with default header values.

successful operation
*/
type GetFeaturesOK struct {
	Payload *models.FeaturesResponse
}

func (o *GetFeaturesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FeaturesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFeaturesDefault creates a GetFeaturesDefault with default headers values
func NewGetFeaturesDefault(code int) *GetFeaturesDefault {
	return &GetFeaturesDefault{
		_statusCode: code,
	}
}

/*GetFeaturesDefault handles this case with default header values.

error
*/
type GetFeaturesDefault struct {
	_statusCode int

	Payload *models.HTTPErrorResponse
}

// Code gets the status code for the get features default response
func (o *GetFeaturesDefault) Code() int {
	return o._statusCode
}

func (o *GetFeaturesDefault) Error() string {
	return o.Payload.Error.Message
}

func (o *GetFeaturesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
