// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/SkycoinProject/hardware-wallet-daemon/src/models"
)

// NewPostIntermediatePassphraseParams creates a new PostIntermediatePassphraseParams object
// with the default values initialized.
func NewPostIntermediatePassphraseParams() *PostIntermediatePassphraseParams {
	var ()
	return &PostIntermediatePassphraseParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostIntermediatePassphraseParamsWithTimeout creates a new PostIntermediatePassphraseParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostIntermediatePassphraseParamsWithTimeout(timeout time.Duration) *PostIntermediatePassphraseParams {
	var ()
	return &PostIntermediatePassphraseParams{

		timeout: timeout,
	}
}

// NewPostIntermediatePassphraseParamsWithContext creates a new PostIntermediatePassphraseParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostIntermediatePassphraseParamsWithContext(ctx context.Context) *PostIntermediatePassphraseParams {
	var ()
	return &PostIntermediatePassphraseParams{

		Context: ctx,
	}
}

// NewPostIntermediatePassphraseParamsWithHTTPClient creates a new PostIntermediatePassphraseParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostIntermediatePassphraseParamsWithHTTPClient(client *http.Client) *PostIntermediatePassphraseParams {
	var ()
	return &PostIntermediatePassphraseParams{
		HTTPClient: client,
	}
}

/*PostIntermediatePassphraseParams contains all the parameters to send to the API endpoint
for the post intermediate passphrase operation typically these are written to a http.Request
*/
type PostIntermediatePassphraseParams struct {

	/*PassphraseRequest
	  PassPhraseRequest is request data for /api/v1/intermediate/passphrase

	*/
	PassphraseRequest *models.PassphraseRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post intermediate passphrase params
func (o *PostIntermediatePassphraseParams) WithTimeout(timeout time.Duration) *PostIntermediatePassphraseParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post intermediate passphrase params
func (o *PostIntermediatePassphraseParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post intermediate passphrase params
func (o *PostIntermediatePassphraseParams) WithContext(ctx context.Context) *PostIntermediatePassphraseParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post intermediate passphrase params
func (o *PostIntermediatePassphraseParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post intermediate passphrase params
func (o *PostIntermediatePassphraseParams) WithHTTPClient(client *http.Client) *PostIntermediatePassphraseParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post intermediate passphrase params
func (o *PostIntermediatePassphraseParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPassphraseRequest adds the passphraseRequest to the post intermediate passphrase params
func (o *PostIntermediatePassphraseParams) WithPassphraseRequest(passphraseRequest *models.PassphraseRequest) *PostIntermediatePassphraseParams {
	o.SetPassphraseRequest(passphraseRequest)
	return o
}

// SetPassphraseRequest adds the passphraseRequest to the post intermediate passphrase params
func (o *PostIntermediatePassphraseParams) SetPassphraseRequest(passphraseRequest *models.PassphraseRequest) {
	o.PassphraseRequest = passphraseRequest
}

// WriteToRequest writes these params to a swagger request
func (o *PostIntermediatePassphraseParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.PassphraseRequest != nil {
		if err := r.SetBodyParam(o.PassphraseRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
