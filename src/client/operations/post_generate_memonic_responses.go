// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/skycoin/hardware-wallet-daemon/src/models"
)

// PostGenerateMemonicReader is a Reader for the PostGenerateMemonic structure.
type PostGenerateMemonicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostGenerateMemonicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostGenerateMemonicOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 409:
		result := NewPostGenerateMemonicConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostGenerateMemonicOK creates a PostGenerateMemonicOK with default headers values
func NewPostGenerateMemonicOK() *PostGenerateMemonicOK {
	return &PostGenerateMemonicOK{}
}

/*PostGenerateMemonicOK handles this case with default header values.

successful operation
*/
type PostGenerateMemonicOK struct {
	Payload *models.HttpsuccessResponse
}

func (o *PostGenerateMemonicOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HttpsuccessResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGenerateMemonicConflict creates a PostGenerateMemonicConflict with default headers values
func NewPostGenerateMemonicConflict() *PostGenerateMemonicConflict {
	return &PostGenerateMemonicConflict{}
}

/*PostGenerateMemonicConflict handles this case with default header values.

error
*/
type PostGenerateMemonicConflict struct {
	Payload *models.HTTPErrorResponse
}

func (o *PostGenerateMemonicConflict) Error() string {
	return o.Payload.Error.Message
}

func (o *PostGenerateMemonicConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
