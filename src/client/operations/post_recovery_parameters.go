// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/SkycoinProject/hardware-wallet-daemon/src/models"
)

// NewPostRecoveryParams creates a new PostRecoveryParams object
// with the default values initialized.
func NewPostRecoveryParams() *PostRecoveryParams {
	var ()
	return &PostRecoveryParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostRecoveryParamsWithTimeout creates a new PostRecoveryParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostRecoveryParamsWithTimeout(timeout time.Duration) *PostRecoveryParams {
	var ()
	return &PostRecoveryParams{

		timeout: timeout,
	}
}

// NewPostRecoveryParamsWithContext creates a new PostRecoveryParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostRecoveryParamsWithContext(ctx context.Context) *PostRecoveryParams {
	var ()
	return &PostRecoveryParams{

		Context: ctx,
	}
}

// NewPostRecoveryParamsWithHTTPClient creates a new PostRecoveryParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostRecoveryParamsWithHTTPClient(client *http.Client) *PostRecoveryParams {
	var ()
	return &PostRecoveryParams{
		HTTPClient: client,
	}
}

/*PostRecoveryParams contains all the parameters to send to the API endpoint
for the post recovery operation typically these are written to a http.Request
*/
type PostRecoveryParams struct {

	/*RecoveryRequest
	  RecoveryRequest is request data for /api/v1/recovery

	*/
	RecoveryRequest *models.RecoveryRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post recovery params
func (o *PostRecoveryParams) WithTimeout(timeout time.Duration) *PostRecoveryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post recovery params
func (o *PostRecoveryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post recovery params
func (o *PostRecoveryParams) WithContext(ctx context.Context) *PostRecoveryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post recovery params
func (o *PostRecoveryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post recovery params
func (o *PostRecoveryParams) WithHTTPClient(client *http.Client) *PostRecoveryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post recovery params
func (o *PostRecoveryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRecoveryRequest adds the recoveryRequest to the post recovery params
func (o *PostRecoveryParams) WithRecoveryRequest(recoveryRequest *models.RecoveryRequest) *PostRecoveryParams {
	o.SetRecoveryRequest(recoveryRequest)
	return o
}

// SetRecoveryRequest adds the recoveryRequest to the post recovery params
func (o *PostRecoveryParams) SetRecoveryRequest(recoveryRequest *models.RecoveryRequest) {
	o.RecoveryRequest = recoveryRequest
}

// WriteToRequest writes these params to a swagger request
func (o *PostRecoveryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.RecoveryRequest != nil {
		if err := r.SetBodyParam(o.RecoveryRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
