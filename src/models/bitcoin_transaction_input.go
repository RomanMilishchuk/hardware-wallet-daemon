// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BitcoinTransactionInput bitcoin transaction input
//
// swagger:model BitcoinTransactionInput
type BitcoinTransactionInput struct {

	// index
	// Required: true
	Index *int64 `json:"index"`

	// prev hash
	// Required: true
	PrevHash *string `json:"prev_hash"`
}

// Validate validates this bitcoin transaction input
func (m *BitcoinTransactionInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIndex(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrevHash(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BitcoinTransactionInput) validateIndex(formats strfmt.Registry) error {

	if err := validate.Required("index", "body", m.Index); err != nil {
		return err
	}

	return nil
}

func (m *BitcoinTransactionInput) validatePrevHash(formats strfmt.Registry) error {

	if err := validate.Required("prev_hash", "body", m.PrevHash); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BitcoinTransactionInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BitcoinTransactionInput) UnmarshalBinary(b []byte) error {
	var res BitcoinTransactionInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
